package com.github.se.wanderpals.model.data

import com.github.se.wanderpals.ui.screens.trip.agenda.CalendarUiState
import java.time.LocalDate
import java.time.LocalTime

/**
 * Represents a specific stop or destination within a trip itinerary. Each stop is defined by a
 * unique location, including geographical coordinates, and contains details about the visit,
 * including a website link for more information.
 *
 * @param stopId Unique identifier for the stop, typically generated by the database.
 * @param title A name or title for the stop, providing a quick reference.
 * @param address The physical address of the stop for easier location and navigation.
 * @param date The scheduled date for the stop. This helps in planning the trip itinerary.
 * @param startTime The time at which the activities at the stop are scheduled to start.
 * @param duration The total duration of the stop's activities, in minutes.
 * @param budget Estimated budget required for the stop, covering expenses like entry fees or
 *   activities.
 * @param description A brief overview or notes about the stop, offering more context or
 *   information.
 * @param geoCords Geographical coordinates (latitude and longitude) pinpointing the exact location.
 * @param website Optional. A URL to a website providing additional information about the stop.
 *   Empty by default.
 * @param imageUrl URL for an image of the stop, optional.
 * @param stopStatus The status of the stop, indicating whether it has been added to the trip or
 *   not.
 */
data class Stop(
    val stopId: String = "",
    val title: String = "",
    val address: String = "",
    val date: LocalDate = LocalDate.of(0, 1, 1),
    val startTime: LocalTime = LocalTime.of(0, 0),
    val duration: Int = -1,
    val budget: Double = 0.0,
    val description: String = "",
    val geoCords: GeoCords = GeoCords(),
    val website: String = "",
    val imageUrl: String = "",
    val stopStatus: CalendarUiState.StopStatus = CalendarUiState.StopStatus.NONE // Default value
)
